name: Uart

proto: |
  int fin_uart_config(fin_uart_t uart, uint32_t baud_rate, uint32_t stop_bits, uint32_t bits_per_char, uint32_t parity, uint32_t flow_ctrl);
  int fin_uart_deconfig(fin_uart_t uart);
  int fin_uart_write(fin_uart_t uart, uint8_t *buf, size_t nbytes);
  int fin_uart_read(fin_uart_t uart, uint8_t *buf, size_t nbytes);
  int fin_uart_power_up(fin_uart_t uart);
  int fin_uart_power_down(fin_uart_t uart);

details: |
  int fin_uart_config(fin_uart_t uart, uint32_t baud_rate, uint32_t stop_bits, uint32_t bits_per_char, uint32_t parity, uint32_t flow_ctrl);
    Arguments:
      {fin_uart_t} uart
        Uart number
      {Uint32} baud_rate
        Uart baud rate
      {Uint32} stop_bits
        Uart number of stop bits
      {Uint32} bits_per_char
        Uart bits per character
      {Uint32} parity
        Uart parity
      {Uint32} flow_ctrl
        Uart flow control

  int fin_uart_deconfig(fin_uart_t uart);
    Arguments:
      {fin_uart_t} uart
        Uart number

  int fin_uart_write(fin_uart_t uart, uint8_t *buf, size_t nbytes);
    Arguments:
      {fin_uart_t} uart
        Uart number
      {Uint8*} buf
        Transmit data buffer 
      {size_t} nbytes
        Transmit data buffer size

  int fin_uart_read(fin_uart_t uart, uint8_t *buf, size_t nbytes);
    Arguments:
    {fin_uart_t} uart
      Uart number
    {Uint8*} buf
      Receive data buffer 
    {size_t} nbytes
      Receive data buffer size

  int fin_uart_power_up(fin_uart_t uart);
    Arguments:
    {fin_uart_t} uart
      Uart number

  int fin_uart_power_down(fin_uart_t uart);
    Arguments:
    {fin_uart_t} uart
      Uart number  

defines: |
    UART1
    UART2
    UART3

summary: |
  <p>Uart</p>


example: |
  /* Uart 3*/
  const char *str = "Aloha!";

  fin_uart_config(UART3,115200,QAPI_UART_1_0_STOP_BITS_E,QAPI_UART_8_BITS_PER_CHAR_E,QAPI_UART_NO_PARITY_E,QAPI_FCTL_OFF_E);
  fin_uart_write(UART3,str,strlen(str));

tags:
  - Uart


introduced: 1.0.0
