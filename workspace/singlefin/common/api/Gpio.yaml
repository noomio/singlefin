name: Gpio

proto: |
  int fin_gpio_pin_on(uint32_t pin, uint32_t trigger, fin_gpio_interrupt_cb_t interrupt_cb);
  int fin_gpio_pin_trigger(uint32_t pin);
  int fin_gpio_pin_disable_irq(uint32_t pin);
  int fin_gpio_pin_enable_irq(uint32_t pin);
  int fin_gpio_pin_config(uint32_t pin, uint32_t pull, uint32_t drive, uint32_t type);
  int fin_gpio_pin_output(uint32_t pin, uint32_t pull, uint32_t drive);
  int fin_gpio_pin_input(uint32_t pin, uint32_t pull, uint32_t drive);
  int fin_gpio_pin_release(uint32_t pin);
  int fin_gpio_pin_write(uint32_t pin, bool val);
  int fin_gpio_pin_read(uint32_t pin);
  void fin_gpio_config_dump(uint32_t pin);

details: |
  int fin_gpio_pin_on(uint32_t pin, uint32_t trigger, gpio_interrupt_cb_t interrupt_cb);
    Arguments:
      {Uint32} pin
        Module pin number
      {Uint32} trigger
        Callback edge trigger
      {function}
        Function callback

  int fin_gpio_pin_trigger(uint32_t pin);
    Arguments:
      {Uint32} pin
        Module pin number

  int fin_gpio_pin_disable_irq(uint32_t pin);
    Arguments:
      {Uint32} pin
        Module pin number

  int fin_gpio_pin_enable_irq(uint32_t pin);
    Arguments:
      {Uint32} pin
        Module pin number

  int fin_gpio_pin_config(uint32_t pin, uint32_t pull, uint32_t drive, uint32_t type);
    Arguments:
      {Uint32} pin
        Module pin number
      {Uint32} pull
        Pull type
      {Uint32} drive
        Pin current drive
      {Uint32} type
       Input or Output

  int fin_gpio_pin_output(uint32_t pin, uint32_t pull, uint32_t drive);
    Arguments:
      {Uint32} pin
        Module pin number
      {Uint32} pull
        Pull type
      {Uint32} drive
        Pin current drive

  int fin_gpio_pin_input(uint32_t pin, uint32_t pull, uint32_t drive);
    Arguments:
      {Uint32} pin
        Module pin number
      {Uint32} pull
        Pull type
      {Uint32} drive
        Pin current drive

  int fin_gpio_pin_release(uint32_t pin);
    Arguments:
      {Uint32} pin
        Module pin number

  int fin_gpio_pin_write(uint32_t pin, bool val);
    Arguments:
      {Uint32} pin
        Module pin number
      {Bool} val
        Value to write

  int fin_gpio_pin_read(uint32_t pin);
    Arguments:
      {Uint32} pin
        Module pin number

  void fin_gpio_config_dump(uint32_t pin);
    Arguments:
      {Uint32} pin
        Module pin number

callbacks: |
  typedef void (*fin_gpio_interrupt_cb_t)(uint32_t arg);

defines: |
  PIN4
  PIN5
  PIN6
  PIN7
  PIN18
  PIN19
  PIN22
  PIN23
  PIN26
  PIN27
  PIN28
  PIN40
  PIN41
  PIN64
  PullUp
  PullDown
  PullNone
  Keeper
  Drive2mA
  Drive4mA
  Drive6mA
  Drive8mA
  Drive10mA
  Drive12mA
  Drive14mA
  Drive16mA
  Input
  Output
  
summary: |
  <p>Gpio</p>
  <p>When a mode isn't specified then the keeper mode is used.</p>


example: |
  fin_gpio_pin_config(PIN18,PullUp,Drive12mA,Input);
  int val = fin_gpio_pin_read(PIN18);

tags:
  - Gpio


introduced: 1.0.0
